version: '3.8'

services:
  # PostgreSQL with PostGIS extension
  postgres:
    build:
      context: ./docker/postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-agricarbonx}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-agricarbonxpass}
      - POSTGRES_DB=${POSTGRES_DB:-agricarbonx}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agricarbonx"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Redis for Celery broker
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API service
  backend:
    build:
      context: ./docker/backend
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER:-agricarbonx}:${POSTGRES_PASSWORD:-agricarbonxpass}@postgres:5432/${POSTGRES_DB:-agricarbonx}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_ENDPOINT=minio:9000
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery worker for background tasks
  worker:
    build:
      context: ./docker/backend
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER:-agricarbonx}:${POSTGRES_PASSWORD:-agricarbonxpass}@postgres:5432/${POSTGRES_DB:-agricarbonx}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_ENDPOINT=minio:9000
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    command: celery -A app.tasks.worker worker --loglevel=info

  # Frontend service
  frontend:
    build:
      context: ./docker/frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data:
  minio_data:
